# Создано https://www.toptal.com/developers/gitignore/api/python , pycharm
# Редактировать в https://www.toptal.com/developers/gitignore?templates=python , pycharm
.идея/
### PyCharm ###
# Охватывает IDE JetBrains: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm и Rider
# Ссылка: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Пользовательские вещи
.идея/**/workspace.xml
.идея/**/tasks.xml
.идея/**/usage.statistics.xml
.idea/**/словари
.идея/**/полка

# AWS для конкретного пользователя
.идея/**/aws.xml

# Сгенерированные файлы
.идея/**/contentModel.xml

# Чувствительные или файлы с высоким оттоком
.idea/**/Источники данных/
.idea/**/DataSources.ids
.идея/**/dataSources.local.xml
.идея/**/sqlDataSources.xml
.идея/**/dynamic.xml
.идея/**/uiDesigner.xml
.идея/**/dbnavigator.xml

# Gradle
.идея/**/gradle.xml
.idea/**/библиотеки

# Gradle и Maven с автоматическим импортом
# При использовании Gradle или Maven с автоматическим импортом вы должны исключить файлы модулей,
# так как они будут воссозданы и могут вызвать отток. Раскомментируйте, если используете
# автоматический импорт.
#идея/артефакты
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/модули
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# SonarLint плагин
.идея/sonarlint/

# Crashlytics плагин (для Android Studio и IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
ткань.свойства

# Клиент Rest на основе редактора
.idea/HttpRequests

# Android studio 3.1+ сериализованный файл кэша
.idea/caches/build_file_checksums.ser

### Патч PyCharm ###
# Комментарий Причина: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint плагин
# https://plugins.jetbrains.com/plugin/7973-sonarlint
.idea/**/sonarlint/

# SonarQube Плагин
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
.идея/**/sonarIssues.xml

# Markdown Navigator plugin
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
.idea/**/markdown-navigator.xml
.idea/**/markdown-navigator-enh.xml
.idea/**/markdown-navigator/

# Cache file creation bug
# See https://youtrack.jetbrains.com/issue/JBR-2257
.idea/$CACHE_FILE$

# CodeStream plugin
# https://plugins.jetbrains.com/plugin/12206-codestream
.idea/codestream.xml

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
сборка/
разработка-яйца/
dist/
Загрузки/
яйца/
.яйца/
lib/
lib64/
части/
sdist/
var/
колеса/
поделиться/python-wheels/
*.egg-info/
.установлен.cfg
*.яйцо
МАНИФЕСТ

# PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед PyInstaller строит exe, чтобы ввести в него дату / другую информацию.
*.манифест
*.spec

# Журналы установщика
pip-log.txt
pip-delete-this-directory.txt

# Модульный тест / отчеты о покрытии
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Колба:
экземпляр/
.webassets-кэш

# Царапины:
.scrapy

# Документация Сфинкса
docs/_build/

# PyBuilder
.pybuilder/
цель/

# Блокнот Jupyter
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете игнорировать эти файлы, так как код
# предназначен для работы в нескольких средах; в противном случае проверьте их:
# .python-версия

# pipenv
# Согласно pypa/pipenv#598, рекомендуется включить Pipfile .блокировка в системе контроля версий.
# Однако в случае совместной работы, если у вас есть зависимости или зависимости от платформы
# не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают или нет
# установите все необходимые зависимости.
#Pipfile.lock

# поэзия
# Аналогично Pipfile .кроме того, обычно рекомендуется включать поэзию.блокировка в системе контроля версий.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и более
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#поэзия.блокировка

# PEP 582; используется, например github.com/David-OConnor/pyflow
__pypackages__/

# Сельдерей
celerybeat-расписание
celerybeat.pid

# SageMath проанализировал файлы
*.sage.py

# Среды
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типа Pyre
.pyre/

# анализатор статических типов pytype
.pytype/

# Символы отладки Cython
cython_debug/

# PyCharm
# JetBrains конкретный шаблон поддерживается в отдельном JetBrains.gitignore, который может
# можно найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и могут быть добавлены в глобальный gitignore или объединены в этот файл. Для более ядерной
# опция (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.идея/

# Конец https://www.toptal.com/developers/gitignore/api/python , pycharm
